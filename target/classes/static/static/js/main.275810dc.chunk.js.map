{"version":3,"sources":["Container.js","Footer.js","client.js","forms/AddItemForm.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","react_default","a","createElement","style","width","margin","textAlign","children","Footer","className","src_Container","undefined","numberOfItems","avatar","backgroundColor","marginRight","size","es_button","onClick","handleAddItemClickEvent","type","getAllItems","fetch","then","checkStatus","deleteItem","studentId","concat","method","response","ok","error","Error","statusText","json","e","Promise","reject","inputBottomMargin","marginBottom","tagStyle","Object","objectSpread","color","Option","Select","AddItemForm","formik_esm","initialValues","currencyType","amount","createdAt","walletLocation","validate","values","errors","includes","onSubmit","item","_ref","student","setSubmitting","headers","Content-Type","body","JSON","stringify","onSuccess","catch","err","onFailure","finally","_ref2","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","setFieldTouched","setFieldValue","isValid","es_select","placeholder","onChange","value","onBlur","key","tag","input","name","onKeyDown","preventDefault","email","disabled","App","state","items","isFetching","isAddItemModalVisisble","openAddItemModal","_this","setState","closeAddItemModal","openNotificationWithIcon","message","description","notification","fetchItems","res","console","log","itemId","status","this","_this2","_this$state","commonElements","modal","title","visible","onOk","onCancel","forms_AddItemForm","httpStatus","src_Footer_0","length","spin","indicator","icon","fontSize","columns","dataIndex","render","text","record","react","popconfirm","placement","onConfirm","okText","cancelText","stopPropagation","table","dataSource","pagination","rowKey","Component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.275810dc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Container = props => (\n    <div style={{width: '1300px', margin: '0 auto', textAlign: 'center'}}>\n        {props.children}\n    </div>\n);\n\nexport default Container;","import React from 'react';\nimport Container from './Container';\nimport { Button, Avatar } from 'antd';\nimport './Footer.css';\n\nconst Footer = (props) => (\n    <div className='footer'>\n        <Container>\n            {props.numberOfItems !== undefined ?\n                <Avatar \n                    style={{backgroundColor: '#f56a00', marginRight: '5px'}}\n                    size='large'>{props.numberOfItems}</Avatar> : null\n            }\n            <Button onClick={() => props.handleAddItemClickEvent()} type='primary'>Add new Item +</Button>\n        </Container>\n    </div>\n);\n\nexport default Footer;","import fetch from 'unfetch';\n\nexport const getAllItems = () => \n    fetch('api/items').then(checkStatus);\n\nexport const addNewItem = student =>\n    fetch('api/items', {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(student)\n    })\n    .then(checkStatus);\n\nexport const deleteItem = studentId =>\n    fetch(`api/items/${studentId}`, {\n        method: 'DELETE'\n    })\n    .then(checkStatus);\n\n    const checkStatus = response => {\n        if (response.ok) {\n            return response;\n        } else {\n            let error = new Error(response.statusText);\n            error.response = response;\n            response.json().then(e => {\n                error.error = e;\n            });\n            return Promise.reject(error);\n        }\n    }\n    ","import React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Tag, Select } from 'antd';\nimport { addNewItem } from '../client';\n\nconst inputBottomMargin = {marginBottom: '10px'};\nconst tagStyle = {backgroundColor: '#f50', color: 'white', ...inputBottomMargin};\n\nconst Option = Select.Option;\n\nconst AddItemForm = (props) => (\n    <Formik\n        initialValues={{ currencyType: '', amount: '', createdAt: '', walletLocation: ''}}\n        validate={values => {\n            let errors = {};\n\n            if (!values.walletLocation) {\n                errors.walletLocation = 'Wallet location Required'\n            }\n\n            if (!values.amount) {\n                errors.amount = 'Amount Required'\n            }else if(values.amount < 0){\n                errors.amount = 'Positive number Required'\n            }\n\n            if (!values.createdAt) {\n                errors.createdAt = 'Date of purchase Required';\n            }\n\n            if (!values.currencyType) {\n                errors.currencyType = 'Cryptocurrency Required';\n            } else if (!['Bitcoin', 'Ethereum', 'Ripple'].includes(values.currencyType)) {\n                errors.currencyType = 'Cryptocurrency must be (Bitcoin or Ethereum or Ripple)';\n            }\n\n            return errors;\n        }}\n        onSubmit={(item, { setSubmitting }) => {\n            addNewItem(item).then(() => {\n                props.onSuccess();\n            })\n            .catch(err => {\n                props.onFailure(err);\n            })\n            .finally(() => {\n                setSubmitting(false);\n            })\n        }}>\n    {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        submitForm,\n        setFieldTouched,\n        setFieldValue,\n        isValid\n    }) => (\n        <form onSubmit={handleSubmit}>\n            <h6>Please enter Cryptocurrency</h6>\n            <Select\n            placeholder=\"Please enter Cryptocurrency\"\n              style={inputBottomMargin}\n              onChange={value => setFieldValue(\"currencyType\", value)}\n              onBlur={() => setFieldTouched(\"currencyType\", true)}\n              value={values.currencyType}\n            >\n              <Option key={1} value=\"Ripple\">\n              Ripple\n              </Option>\n              <Option key={2} value=\"Ethereum\">\n              Ethereum\n              </Option>\n              <Option key={3} value=\"Bitcoin\">\n              Bitcoin\n              </Option>\n            </Select>\n\n            {/* <Input\n                style={inputBottomMargin}\n                name=\"currencyType\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.currencyType}\n                placeholder='Currency: Bitcoin, Ethereum, Ripple'\n            /> */}\n            {errors.currencyType && touched.currencyType &&\n                    <Tag style={tagStyle}>{errors.currencyType}</Tag>}\n            <Input\n                style={inputBottomMargin}\n                name=\"amount\"\n                type=\"number\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.amount}\n                placeholder='Please enter an amount'\n            />\n            {errors.amount && touched.amount && \n                <Tag style={tagStyle}>{errors.amount}</Tag>}\n            <Input\n                style={inputBottomMargin}\n                name=\"createdAt\"\n                type=\"date\"\n                onKeyDown={(e) => e.preventDefault()}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.createdAt}\n                placeholder='Date of purchase'\n            />\n            {errors.email && touched.email && \n                <Tag style={tagStyle}>{errors.email}</Tag>}\n            <Input\n                style={inputBottomMargin}\n                name=\"walletLocation\"\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.walletLocation}\n                placeholder='Wallet Location'\n            />\n            {errors.walletLocation && touched.walletLocation && \n                <Tag style={tagStyle}>{errors.walletLocation}</Tag>}\n            <Button \n                onClick={() => submitForm()} \n                type=\"submit\" \n                disabled={isSubmitting | (touched && !isValid)}>\n                Submit\n            </Button>\n        </form>\n    )}\n    </Formik>\n);\n\nexport default AddItemForm;","import React, { Component, Fragment } from 'react';\nimport Container from './Container';\nimport Footer from './Footer';\nimport {getAllItems, deleteItem} from './client';\nimport AddItemForm from './forms/AddItemForm';\n\nimport { Table, Spin, Icon, Button, notification, Popconfirm, Modal} from 'antd';\n\nconst getIndicatorIcon = () => <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass App extends Component {\n\n  state = {\n    items: [],\n    isFetching: false,\n    isAddItemModalVisisble: false,\n  }\n\n  componentDidMount () {\n    this.fetchItems();\n  }\n\n  openAddItemModal = () => this.setState({isAddItemModalVisisble: true})\n\n  closeAddItemModal = () => this.setState({isAddItemModalVisisble: false})\n\n  openNotificationWithIcon = (type, message, description) => notification[type]({message, description});\n\n  fetchItems = () => {\n    this.setState({\n      isFetching: true\n    });\n    getAllItems()\n      .then(res => res.json()\n      .then(items => {\n        console.log(items);\n        this.setState({\n          items,\n          isFetching: false\n        });\n      }))\n  }\n\n  deleteItem = (itemId, currencyType) => {\n    deleteItem(itemId).then(() => {\n      this.openNotificationWithIcon('success', 'Item deleted', `${currencyType} was deleted`);\n      this.fetchItems();\n    }).catch(err => {\n      this.openNotificationWithIcon('error', 'error', `(${err.error.status}) ${err.error.error}`);\n    });\n  }\n\n  render() {\n\n    const { items, isFetching, isAddItemModalVisisble } = this.state;\n\n    const commonElements = () => (\n      <div>\n        <Modal\n          title='Add new Item'\n          visible={isAddItemModalVisisble}\n          onOk={this.closeAddItemModal}\n          onCancel={this.closeAddItemModal}\n          width={1000}>\n          <AddItemForm \n            onSuccess={() => {\n              this.closeAddItemModal(); \n              this.fetchItems();\n            }}\n            onFailure={(error) => {\n              const message = error.error.message;\n              const description = error.error.httpStatus;\n              this.openNotificationWithIcon('error', message, description);\n            }}\n          />\n        </Modal>\n\n        <Footer\n          numberOfItems={items.length}\n          handleAddItemClickEvent={this.openAddItemModal}\n        />  \n      </div>\n    )\n\n    if (isFetching) {\n      return (\n        <Container>\n          <Spin indicator={getIndicatorIcon()}/>\n        </Container>\n      );\n    }\n\n    if (items && items.length) {\n      const columns = [\n    \n        {\n          title: 'Cryptocurrency',\n          dataIndex: 'currencyType',\n          key: 'currencyType'\n        },\n        {\n          title: 'Amount',\n          dataIndex: 'amount',\n          key: 'amount'\n        },\n        {\n          title: 'Date of purchase',\n          dataIndex: 'createdAt',\n          key: 'createdAt'\n        },\n        {\n          title: 'Wallet Location',\n          dataIndex: 'walletLocation',\n          key: 'walletLocation'\n        },\n        {\n          title: 'Current market value (EUR)',\n          dataIndex: 'marketPrice',\n          key: 'marketPrice'\n        },\n        {\n          title: 'Option',\n          key: 'action',\n          render: (text, record) => (\n            <Fragment>\n              <Popconfirm\n                placement='topRight'\n                title={`Are you sure to delete ${record.currencyType}`} \n                onConfirm={() => this.deleteItem(record.itemId, record.currencyType)} okText='Yes' cancelText='No'\n                onCancel={e => e.stopPropagation()}>\n                <Button type='danger' onClick={(e) => e.stopPropagation()}>Delete</Button>\n              </Popconfirm>\n            </Fragment>\n          ),\n        }\n      ];\n\n      return (\n        <Container>\n          <Table \n            style={{marginBottom: '100px'}}\n            dataSource={items} \n            columns={columns} \n            pagination={false}\n            rowKey='itemId'/>\n          {commonElements()}\n        </Container>\n      );\n\n    }\n\n    return (\n      <Container>\n         <h1 style={{color: '#f56a00'}}>No portfolio items found</h1>\n        {commonElements()}\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}